import { useToast, Box, Text, HStack } from "@chakra-ui/react";
import { InfoIcon } from "@chakra-ui/icons";
type ToastType = "success" | "error" | "info" | "warning";
interface CustomToastProps {
  type: ToastType;
  title: string;
  description: string;
}
const iconMap = {
  success: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="25"
      viewBox="0 0 24 25"
      fill="none"
    >
      {" "}
      <path
        d="M17 3.84001C18.5083 4.71087 19.7629 5.96054 20.6398 7.46531C21.5167 8.97009 21.9854 10.6778 21.9994 12.4194C22.0135 14.1609 21.5725 15.876 20.72 17.3947C19.8676 18.9135 18.6332 20.1832 17.1392 21.0783C15.6452 21.9734 13.9434 22.4628 12.2021 22.4981C10.4608 22.5333 8.74055 22.1132 7.21155 21.2793C5.68256 20.4453 4.39787 19.2265 3.48467 17.7435C2.57146 16.2605 2.06141 14.5647 2.005 12.824L2 12.5L2.005 12.176C2.061 10.449 2.56355 8.76598 3.46364 7.29101C4.36373 5.81604 5.63065 4.59947 7.14089 3.7599C8.65113 2.92033 10.3531 2.48641 12.081 2.50045C13.8089 2.51449 15.5036 2.97601 17 3.84001ZM15.707 9.79302C15.5348 9.62084 15.3057 9.51741 15.0627 9.50213C14.8197 9.48685 14.5794 9.56076 14.387 9.71001L14.293 9.79302L11 13.085L9.707 11.793L9.613 11.71C9.42058 11.5609 9.18037 11.487 8.9374 11.5024C8.69444 11.5177 8.46541 11.6211 8.29326 11.7933C8.12112 11.9654 8.01768 12.1945 8.00235 12.4374C7.98702 12.6804 8.06086 12.9206 8.21 13.113L8.293 13.207L10.293 15.207L10.387 15.29C10.5624 15.4261 10.778 15.4999 11 15.4999C11.222 15.4999 11.4376 15.4261 11.613 15.29L11.707 15.207L15.707 11.207L15.79 11.113C15.9393 10.9206 16.0132 10.6804 15.9979 10.4373C15.9826 10.1943 15.8792 9.96521 15.707 9.79302Z"
        fill="#12B76A"
      />{" "}
    </svg>
  ),
  error: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="25"
      viewBox="0 0 24 25"
      fill="none"
    >
      {" "}
      <path
        d="M15.3 2.5C15.8 2.5 16.214 2.66 16.574 2.97L16.707 3.093L21.407 7.793C21.755 8.141 21.953 8.538 21.993 9.017L22 9.2V15.8C22 16.3 21.84 16.714 21.53 17.074L21.407 17.207L16.707 21.907C16.359 22.255 15.962 22.453 15.483 22.493L15.3 22.5H8.7C8.2 22.5 7.786 22.34 7.426 22.03L7.293 21.907L2.593 17.207C2.245 16.859 2.047 16.462 2.007 15.983L2 15.8V9.2C2 8.7 2.16 8.286 2.47 7.926L2.593 7.793L7.293 3.093C7.641 2.745 8.038 2.547 8.517 2.507L8.7 2.5H15.3ZM12.01 15.5L11.883 15.507C11.64 15.5359 11.4159 15.653 11.2534 15.836C11.0909 16.019 11.0011 16.2552 11.0011 16.5C11.0011 16.7448 11.0909 16.981 11.2534 17.164C11.4159 17.347 11.64 17.4641 11.883 17.493L12 17.5L12.127 17.493C12.37 17.4641 12.5941 17.347 12.7566 17.164C12.9191 16.981 13.0089 16.7448 13.0089 16.5C13.0089 16.2552 12.9191 16.019 12.7566 15.836C12.5941 15.653 12.37 15.5359 12.127 15.507L12.01 15.5ZM12 7.5C11.7551 7.50003 11.5187 7.58996 11.3356 7.75272C11.1526 7.91547 11.0357 8.13975 11.007 8.383L11 8.5V12.5L11.007 12.617C11.0359 12.86 11.153 13.0841 11.336 13.2466C11.519 13.4091 11.7552 13.4989 12 13.4989C12.2448 13.4989 12.481 13.4091 12.664 13.2466C12.847 13.0841 12.9641 12.86 12.993 12.617L13 12.5V8.5L12.993 8.383C12.9643 8.13975 12.8474 7.91547 12.6644 7.75272C12.4813 7.58996 12.2449 7.50003 12 7.5Z"
        fill="#F04438"
      />{" "}
    </svg>
  ),
  info: <InfoIcon color="blue.500" />,
  warning: (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="25"
      viewBox="0 0 24 25"
      fill="none"
    >
      {" "}
      <path
        d="M17 3.84001C18.5083 4.71087 19.7629 5.96054 20.6398 7.46531C21.5167 8.97009 21.9854 10.6778 21.9994 12.4194C22.0135 14.1609 21.5725 15.876 20.72 17.3947C19.8676 18.9135 18.6332 20.1832 17.1392 21.0783C15.6452 21.9734 13.9434 22.4628 12.2021 22.4981C10.4608 22.5333 8.74055 22.1132 7.21155 21.2793C5.68256 20.4453 4.39787 19.2265 3.48467 17.7435C2.57146 16.2605 2.06141 14.5647 2.005 12.824L2 12.5L2.005 12.176C2.061 10.449 2.56355 8.76598 3.46364 7.29101C4.36373 5.81604 5.63065 4.59947 7.14089 3.7599C8.65113 2.92033 10.3531 2.48641 12.081 2.50045C13.8089 2.51449 15.5036 2.97601 17 3.84001ZM12.01 15.5L11.883 15.507C11.64 15.5359 11.4159 15.653 11.2534 15.836C11.0909 16.019 11.0011 16.2553 11.0011 16.5C11.0011 16.7448 11.0909 16.981 11.2534 17.1641C11.4159 17.3471 11.64 17.4641 11.883 17.493L12 17.5L12.127 17.493C12.37 17.4641 12.5941 17.3471 12.7566 17.1641C12.9191 16.981 13.0089 16.7448 13.0089 16.5C13.0089 16.2553 12.9191 16.019 12.7566 15.836C12.5941 15.653 12.37 15.5359 12.127 15.507L12.01 15.5ZM12 7.50001C11.7551 7.50005 11.5187 7.58997 11.3356 7.75273C11.1526 7.91549 11.0357 8.13976 11.007 8.38301L11 8.50001V12.5L11.007 12.617C11.0359 12.8601 11.153 13.0841 11.336 13.2466C11.519 13.4091 11.7552 13.4989 12 13.4989C12.2448 13.4989 12.481 13.4091 12.664 13.2466C12.847 13.0841 12.9641 12.8601 12.993 12.617L13 12.5V8.50001L12.993 8.38301C12.9643 8.13976 12.8474 7.91549 12.6644 7.75273C12.4813 7.58997 12.2449 7.50005 12 7.50001Z"
        fill="#F79009"
      />{" "}
    </svg>
  ),
};
const bgColorMap = {
  success: "#C6F6D5",
  error: "#FED7D7",
  info: "#FFE0CD",
  warning: "#FEEBCB",
};
const borderColorMap = {
  success: "#12B76A",
  error: "#F04438",
  info: "#F75B00",
  warning: "#F79009",
};
export const useCustomToast = () => {
  const toast = useToast();
  const showCustomToast = ({ type, title, description }: CustomToastProps) => {
    toast({
      position: "bottom-right",
      duration: 3000,
      isClosable: true,
      variant: "top-accent",
      render: () => (
        <Box
          p="12px 16px"
          bg="white"
          boxShadow="lg"
          width={{ base: "96vw", md: "400px" }}
          borderLeft={`4px solid ${borderColorMap[type]}`}
          mt={{ base: "86px", md: "0" }}
          mb={8}
          borderRadius={8}
        >
          <HStack align="center" spacing={3}>
            {iconMap[type]}
            <Box>
              <Text fontWeight="bold">{title}</Text> <Text>{description}</Text>{" "}
            </Box>
          </HStack>
        </Box>
      ),
    });
  };
  return showCustomToast;
};
