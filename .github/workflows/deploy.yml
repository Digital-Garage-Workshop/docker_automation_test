name: Deploy Next.js to Nginx Server

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: yarn

      # Step 3: Install dependencies
      - name: Install dependencies
        run: yarn

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env

      # Step 4: Build Next.js application
      - name: Build Next.js application
        run: yarn build

      # Step 5: Archive build for deployment
      - name: Archive build artifacts
        run: tar -czf build.tar.gz .next public package.json yarn.lock

      # Step 6: Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: nextjs-build
          path: build.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Download build artifact
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: nextjs-build
          path: ./build

      # Step 2: Transfer build to the server
      - name: Transfer build artifact to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: ./build/build.tar.gz
          target: /var/www/startup/GarageEcommerce/

      # Step 3: SSH into the server to deploy and reload PM2
      - name: Deploy and reload PM2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/startup/GarageEcommerce
            tar -xzf build.tar.gz
            yarn install --production
            pm2 restart GarageWebApi
